
# Utility functions.
# -------------------------------------------------------------------------------------------------------------------- #
function is_darwin()   {
    [[ "$OSTYPE" == darwin* ]];
}

function is_installed() {
    command -v "$1" >/dev/null 2>&1;
}

function is_interactive_shell() {
  # In Zsh, $- contains the current shell flags; if it includes "i", we're interactive
  case $- in
    *i*) return 0 ;;
    *)   return 1 ;;
  esac
}

# -------------------------------------------------------------------------------------------------------------------- #
# Load environment variables.
# -------------------------------------------------------------------------------------------------------------------- #
export DEV_DIR="$HOME/dev"
export DOTFIES_DIR="$HOME/dotfiles"
export EDITOR="vim"
export OBSIDIAN_VAULT_DIR="$HOME/Library/Mobile\ Documents/iCloud~md~obsidian/Documents"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export XDG_CONFIG_HOME="$HOME/.config"

# -------------------------------------------------------------------------------------------------------------------- #
# PATH configuration.
# -------------------------------------------------------------------------------------------------------------------- #
export GOPATH="$DEV_DIR/go"
export GOBIN="$GOPATH/bin"

typeset -a path_dirs
path_dirs=(
  /opt/homebrew/bin
  "$GOBIN"
  /usr/local/opt/llvm/bin
  # Add any other directories you want to include in your PATH here.
)

for d in "${path_dirs[@]}"; do
  [[ -d $d && ! $PATH =~ (^|:)"$d"(:|$) ]] && PATH="$d:$PATH"
done

export PATH

# -------------------------------------------------------------------------------------------------------------------- #
# Tooling configuration.
# -------------------------------------------------------------------------------------------------------------------- #

# -- Eza.
if is_installed eza; then
    alias l="eza"
    alias ls="eza"
    alias ll="eza -l"
    alias lll="eza -la"
else
    alias l="ls"
    alias ll="ls -l"
    alias lll="ls -la"
fi

# -- Git.
git config --global core.editor "$EDITOR"
git config --global core.excludeFile "$HOME/.gitignore"
git config --global pull.rebase "true"
git config --global push.autoSetupRemote "true"
git config --global user.name "Nicholas Corin"
git config --global user.email "nickcorin@gmail.com"

if is_installed bat; then
    git config --global core.pager "bat"
    export GH_PAGER=bat
else
    git config --global core.pager "cat"
    export GH_PAGER=cat
fi

# -- Homebrew.
if is_darwin && is_installed brew; then
    alias brew="arch -arm64 brew"
    eval "$($(brew --prefix)/bin/brew shellenv)"
fi

# -- Tmux.
if is_interactive_shell; then
    source "$XDG_CONFIG_HOME/tmux/tmux_autostart.sh"
fi

# -- Zsh.
if is_interactive_shell; then
    # -- Zsh plugins.
    source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
    source "$(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

    # -- Zsh options.
    setopt autocd
    # setopt correct_all
    setopt histappend
    setopt no_beep
fi

# -------------------------------------------------------------------------------------------------------------------- #
# Aliases.
# -------------------------------------------------------------------------------------------------------------------- #
alias mommy="git"
alias please="sudo"
alias v="nvim"
alias vim="nvim"
alias vd="nvim $DOTFIES_DIR"
alias vo="vim $OBSIDIAN_VAULT_DIR"

# -------------------------------------------------------------------------------------------------------------------- #
# Source all files in the ~/.zshrc.d directory.
# These files contain environment specific variables and functions that may need to be kept private.
# -------------------------------------------------------------------------------------------------------------------- #
if [[ -d $HOME/.zshrc.d ]]; then
  for file in "$HOME/.zshrc.d"/*(N); do
    [[ -r $file ]] && source "$file"
  done
fi

# -------------------------------------------------------------------------------------------------------------------- #
# Activate Starship
# -------------------------------------------------------------------------------------------------------------------- #
if is_interactive_shell; then
    if ! is_installed starship; then
        echo "Starship is not installed. Installing it now."
        brew install starship
    fi

    export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
    eval "$(starship init zsh)"
fi
